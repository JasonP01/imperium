[metadata]
version = "1.0"

[versions]
# platforms
kotlin-core = "1.9.10"
kotlin-coroutine = "1.7.3"
kotlin-runtime = "3.1.0"
kotlinx-serialization = "1.6.0"
java = "17"
mindustry = "146"

# libraries
distributor = "3.2.1"
junit = "5.9.0"
testcontainers = "1.18.3"
mongodb = "4.10.2"
guava = "32.0.1-jre"
gson = "2.10.1"
hoplite = "2.7.4"
deepl = "1.3.0"
slf4j = "2.0.7"
discord4j = "3.2.4"
password4j = "1.7.1"
rabbitmq-client = "5.17.0"
jsoup = "1.16.1"
minio = "8.5.4"
javacord = "3.8.0"
log4j-to-slf4j = "2.20.0"
snowflake-id = "0.0.2"
okhttp = "4.11.0"
# Fixes CVE in okhttp
okio = "3.6.0"
classgraph = "4.8.162"
logback = "1.4.11"
hikari = "5.1.0"
exposed = "0.44.1"
sqlite = "3.44.0.0"
mariadb = "3.3.0"

# gradle plugins
toxopid = "3.2.0"
indra = "3.1.1"
spotless = "6.19.0"
shadow = "8.1.1"
ktlint = "0.49.1"
gradle-versions = "0.47.0"

[libraries]
# libraries
distributor-api = { module = "fr.xpdustry:distributor-api", version.ref = "distributor" }
distributor-kotlin = { module = "fr.xpdustry:distributor-kotlin", version.ref = "distributor" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version.ref = "testcontainers" }
mongodb-driver-kotlin-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }
mongodb-bson-kotlinx = { module = "org.mongodb:bson-kotlinx", version.ref = "mongodb" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
deepl = { module = "com.deepl.api:deepl-java", version.ref = "deepl" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
discord4j-core = { module = "com.discord4j:discord4j-core", version.ref = "discord4j" }
password4j = { module = "com.password4j:password4j", version.ref = "password4j" }
rabbitmq-client = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq-client" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
minio = { module = "io.minio:minio", version.ref = "minio" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlin-coroutine" }
javacord-api = { module = "org.javacord:javacord-api", version.ref = "javacord" }
javacord-core = { module = "org.javacord:javacord-core", version.ref = "javacord" }
log4j-to-slf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4j-to-slf4j" }
snowflake-id = { module = "de.mkammerer.snowflake-id:snowflake-id", version.ref = "snowflake-id" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb" }

# gradle plugins
toxopid = { module = "fr.xpdustry:toxopid", version.ref = "toxopid" }
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-licenser-spotless = { module = "net.kyori:indra-licenser-spotless", version.ref = "indra" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
kotlin-plugin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
kotlin-plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-core" }
gradle-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions" }
